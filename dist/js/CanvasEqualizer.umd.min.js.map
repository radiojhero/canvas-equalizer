{"version":3,"file":"CanvasEqualizer.umd.min.js","sources":["../../node_modules/is-obj/index.js","../../node_modules/deep-assign/index.js","../../src/ts/Common.ts","../../src/ts/FFTNR.ts","../../src/ts/Equalizer.ts","../../src/ts/L10n.ts","../../src/ts/CanvasEqualizer.ts"],"sourcesContent":["'use strict';\nmodule.exports = function (x) {\n\tvar type = typeof x;\n\treturn x !== null && (type === 'object' || type === 'function');\n};\n","'use strict';\nvar isObj = require('is-obj');\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Sources cannot be null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction assignKey(to, from, key) {\n\tvar val = from[key];\n\n\tif (val === undefined || val === null) {\n\t\treturn;\n\t}\n\n\tif (hasOwnProperty.call(to, key)) {\n\t\tif (to[key] === undefined || to[key] === null) {\n\t\t\tthrow new TypeError('Cannot convert undefined or null to object (' + key + ')');\n\t\t}\n\t}\n\n\tif (!hasOwnProperty.call(to, key) || !isObj(val)) {\n\t\tto[key] = val;\n\t} else {\n\t\tto[key] = assign(Object(to[key]), from[key]);\n\t}\n}\n\nfunction assign(to, from) {\n\tif (to === from) {\n\t\treturn to;\n\t}\n\n\tfrom = Object(from);\n\n\tfor (var key in from) {\n\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\tassignKey(to, from, key);\n\t\t}\n\t}\n\n\tif (Object.getOwnPropertySymbols) {\n\t\tvar symbols = Object.getOwnPropertySymbols(from);\n\n\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\tassignKey(to, from, symbols[i]);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n}\n\nmodule.exports = function deepAssign(target) {\n\ttarget = toObject(target);\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tassign(target, arguments[s]);\n\t}\n\n\treturn target;\n};\n","/**\n * canvas-equalizer is distributed under the FreeBSD License\n *\n * Copyright (c) 2012-2017 Armando Meziat, Carlos Rafael Gimenes das Neves\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice, this\n *    list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * The views and conclusions contained in the software and documentation are those\n * of the authors and should not be interpreted as representing official policies,\n * either expressed or implied, of the FreeBSD Project.\n *\n * https://github.com/radiojhero/canvas-equalizer\n */\n\n// miscellaneous functions\n\n(function (window: Window) {\n    try {\n        new CustomEvent('test');\n    }\n    catch (e) {\n        return; // no need to polyfill\n    }\n\n    // polyfills DOM4 CustomEvent\n    function MouseEvent(eventType: string, params: MouseEventInit) {\n        params = params || { bubbles: false, cancelable: false };\n        const mouseEvent = document.createEvent('MouseEvent');\n        mouseEvent.initMouseEvent(eventType, params.bubbles!, params.cancelable!, window, 1,\n                                  params.screenX!, params.screenY!, params.clientX!, params.clientY!,\n                                  params.ctrlKey!, params.altKey!, params.shiftKey!, params.metaKey!,\n                                  0, null);\n\n        return mouseEvent;\n    }\n\n    MouseEvent.prototype = Event.prototype;\n\n    (window as any).MouseEvent = MouseEvent;\n})(window);\n\ntype PointerEventShortName = 'down' | 'move' | 'up';\ntype AttachDetachSignature = (observable: EventTarget, eventName: PointerEventShortName,\n                              targetFunction: (e: MouseEvent) => any, capturePhase?: boolean) => void;\n\nlet attachPointer: AttachDetachSignature;\nlet detachPointer: AttachDetachSignature;\n\nfunction wrap(func: any, wrapper: any, tag: string, elem: EventTarget): any {\n    const wrapperTag = `__${tag}_wrapper__`;\n\n    if (!func[wrapperTag]) {\n        func[wrapperTag] = [];\n    }\n\n    unwrap(func, tag, elem);\n    func[wrapperTag].push({ elem, wrapper });\n    return wrapper;\n}\n\nfunction unwrap(func: any, tag: string, elem: EventTarget): any {\n    const wrapperTag = `__${tag}_wrapper__`;\n\n    let ret: any;\n\n    if (func[wrapperTag]) {\n        func[wrapperTag] = func[wrapperTag].filter((entry: { elem: EventTarget, wrapper: any }, i: number) => {\n            if (entry.elem === elem) {\n                ret = entry.wrapper;\n                return false;\n            }\n\n            return true;\n        });\n    }\n\n    return ret;\n}\n\nif ((window as any).PointerEvent) {\n    attachPointer = function (observable: EventTarget, eventName: PointerEventShortName,\n                              targetFunction: (e: MouseEvent) => any, capturePhase?: boolean) {\n        observable.addEventListener(`pointer${eventName}`, targetFunction as EventListener, capturePhase);\n    };\n    detachPointer = function (observable: EventTarget, eventName: PointerEventShortName,\n                              targetFunction: (e: MouseEvent) => any, capturePhase?: boolean) {\n        observable.removeEventListener(`pointer${eventName}`, targetFunction as EventListener, capturePhase);\n    };\n}\nelse if ('ontouchend' in document) {\n    const mappings: any = {\n        down: ['start'],\n        move: ['move'],\n        up: ['end', 'cancel'],\n    };\n    attachPointer = function (observable: EventTarget, eventName: PointerEventShortName,\n                              targetFunction: (e: MouseEvent) => any, capturePhase?: boolean) {\n        const wrapper = (e: TouchEvent) => {\n            const touch = e.changedTouches[0];\n            const pseudoMouse = new MouseEvent(`mouse${eventName}`, {\n                altKey: e.altKey,\n                clientX: touch && touch.clientX || 0,\n                clientY: touch && touch.clientY || 0,\n                ctrlKey: e.ctrlKey,\n                metaKey: e.metaKey,\n                screenX: touch && touch.screenX || 0,\n                screenY: touch && touch.screenY || 0,\n                shiftKey: e.shiftKey,\n            });\n\n            (pseudoMouse as any).clonedFromTouch = true;\n\n            const result = targetFunction(pseudoMouse);\n\n            if (result === false || pseudoMouse.defaultPrevented) {\n                cancelEvent(e);\n            }\n\n            return result;\n        };\n\n        mappings[eventName].forEach((mapping: string) => {\n            observable.addEventListener(`touch${mapping}`,\n                wrap(targetFunction, wrapper, `touch${eventName}`, observable), capturePhase);\n        });\n    };\n    detachPointer = function (observable: EventTarget, eventName: PointerEventShortName,\n                              targetFunction: (e: MouseEvent) => any, capturePhase?: boolean) {\n        mappings[eventName].forEach((mapping: string) => {\n            observable.removeEventListener(`touch${mapping}`,\n                unwrap(targetFunction, `touch${eventName}`, observable), capturePhase);\n        });\n    };\n}\nelse {\n    attachPointer = function (observable: EventTarget, eventName: PointerEventShortName,\n                              targetFunction: (e: MouseEvent) => any, capturePhase?: boolean) {\n        observable.addEventListener(`mouse${eventName}`, targetFunction as EventListener, capturePhase);\n    };\n    detachPointer = function (observable: EventTarget, eventName: PointerEventShortName,\n                              targetFunction: (e: MouseEvent) => any, capturePhase?: boolean) {\n        observable.removeEventListener(`mouse${eventName}`, targetFunction as EventListener, capturePhase);\n    };\n}\n\nconst runningFuncs: (() => void)[] = [];\n\nexport { attachPointer, detachPointer };\n\n/* tslint:disable:no-magic-numbers object-literal-sort-keys */\nexport const keyFix: any = {\n    Backspace: 8,\n    '\\t': ['Tab', 9],\n    '\\n': ['Enter', 13],\n    Escape: 27,\n    End: 35,\n    Home: 36,\n    ArrowLeft: 37,\n    ArrowUp: 38,\n    ArrowRight: 39,\n    ArrowDown: 40,\n    Delete: 46,\n};\n/* tslint:enable:no-magic-numbers object-literal-sort-keys */\n\nexport function keyPressed(e: KeyboardEvent, ...chars: string[]) {\n    for (let i = 0; i < chars.length; i++) {\n        const chr = chars[i];\n        if (Object.keys(keyFix).indexOf(chr) !== -1) {\n            const [key, keyCode] = Array.isArray(keyFix[chr]) ? keyFix[chr] : [chr, keyFix[chr]];\n            if (e.key === key || e.keyCode === keyCode) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n\nexport function cancelEvent(e: Event) {\n    e.preventDefault();\n    e.stopPropagation();\n    return false;\n}\n\nexport function throttledFunction(func: () => void, timeout?: number) {\n    if (runningFuncs.indexOf(func) === -1) {\n        runningFuncs.push(func);\n        const wrapper = () => {\n            func();\n            runningFuncs.splice(runningFuncs.indexOf(func), 1);\n        };\n\n        if (timeout) {\n            setTimeout(wrapper, timeout);\n        }\n        else {\n            requestAnimationFrame(wrapper);\n        }\n    }\n}\n\nexport function addThrottledEvent(observable: EventTarget,\n                                  eventName: string,\n                                  targetFunction: (e?: Event) => any,\n                                  capturePhase?: boolean) {\n    let running = false;\n    const wrapper = (e: Event) => {\n        if (!running) {\n            running = true;\n            requestAnimationFrame(() => {\n                targetFunction(e);\n                running = false;\n            });\n        }\n    };\n\n    observable.addEventListener(eventName,\n        wrap(targetFunction, wrapper, `throttle${eventName}`, observable), capturePhase);\n}\n\nexport function removeThrottledEvent(observable: EventTarget,\n                                     eventName: string,\n                                     targetFunction: (e?: Event) => any,\n                                     capturePhase?: boolean) {\n    observable.removeEventListener(eventName,\n        unwrap(targetFunction, `throttle${eventName}`, observable), capturePhase);\n}\n\nexport function elemCoords(elem: HTMLElement, e: MouseEvent): { x: number, y: number } {\n    const rect = elem.getBoundingClientRect();\n    return {\n        x: e.clientX - rect.left,\n        y: e.clientY - rect.top,\n    };\n}\n","/**\n * canvas-equalizer is distributed under the FreeBSD License\n *\n * Copyright (c) 2012-2017 Armando Meziat, Carlos Rafael Gimenes das Neves\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice, this\n *    list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * The views and conclusions contained in the software and documentation are those\n * of the authors and should not be interpreted as representing official policies,\n * either expressed or implied, of the FreeBSD Project.\n *\n * https://github.com/radiojhero/canvas-equalizer\n */\n\n/*==============================================================================\n *\n * This algorithm is an adaptation of the algorithm from the hardcover\n * book \"Numerical Recipes: The Art of Scientific Computing, 3rd Edition\",\n * with some additional optimizations and changes.\n *\n * I HIGHLY recommend this book!!! :D\n *\n *==============================================================================\n */\n\n/* Ordering of data\n * time [0]          | Real [bin 0]\n * time [1]          | Real [bin length/2]\n * time [2]          | Real [bin 1]\n * time [3]          | Imag [bin 1]\n * time [...]        | Real [bin ...]\n * time [...]        | Imag [bin ...]\n * time [length-2]   | Real [bin length/2-1]\n * time [length-1]   | Imag [bin length/2-1]\n */\n\n/* tslint:disable:no-magic-numbers no-bitwise */\n\nexport function FFTComplex(data: Float32Array, n: number, isign: number) {\n    const nn = n << 1;\n    let mmax: number;\n    let m: number;\n    let j = 1;\n    let istep: number;\n    let i: number;\n    let wr: number;\n    let wpr: number;\n    let wpi: number;\n    let wi: number;\n    let theta: number;\n    let tempr: number;\n    let tempi: number;\n    let halfmmax: number;\n    let dj1: number;\n    let dj: number;\n\n    // bit reversal swap\n    for (i = 1; i < nn; i += 2) {\n        if (j > i) {\n            tempr = data[j - 1];\n            data[j - 1] = data[i - 1];\n            data[i - 1] = tempr;\n            tempr = data[j];\n            data[j] = data[i];\n            data[i] = tempr;\n        }\n\n        m = n;\n\n        while (m >= 2 && j > m) {\n            j -= m;\n            m >>>= 1;\n        }\n\n        j += m;\n    }\n\n    // first pass (mmax = 2 / wr = 1 / wi = 0)\n    for (i = 1; i <= nn; i += 4) {\n        j = i + 2;\n        tempr = data[j - 1];\n        tempi = data[j];\n        data[j - 1] = data[i - 1] - tempr;\n        data[j] = data[i] - tempi;\n        data[i - 1] += tempr;\n        data[i] += tempi;\n    }\n\n    /* I decided not to unroll the following steps in favor of the cache memory\n\n    // second pass (mmax = 4 / wr = 1 / wi = 0) A\n    for (i = 1; i <= nn; i += 8) {\n        j = i + 4;\n        tempr = data[j - 1];\n        tempi = data[j];\n        data[j - 1] = data[i - 1] - tempr;\n        data[j] = data[i] - tempi;\n        data[i - 1] += tempr;\n        data[i] += tempi;\n    }\n\n    // second pass (mmax = 4 / wr = 0 / wi = isign) B\n    if (isign === 1) {\n        for (i = 3; i <= nn; i += 8) {\n            j = i + 4;\n            tempr = -data[j];\n            tempi = data[j - 1];\n            data[j - 1] = data[i - 1] - tempr;\n            data[j] = data[i] - tempi;\n            data[i - 1] += tempr;\n            data[i] += tempi;\n        }\n    }\n    else {\n        for (i = 3; i <= nn; i += 8) {\n            j = i + 4;\n            tempr = data[j];\n            tempi = -data[j - 1];\n            data[j - 1] = data[i - 1] - tempr;\n            data[j] = data[i] - tempi;\n            data[i - 1] += tempr;\n            data[i] += tempi;\n        }\n    }\n\n    mmax = 8;\n    theta = isign * Math.PI * 0.25;\n    */\n\n    mmax = 4;\n    theta = isign * Math.PI * 0.5;\n\n    while (nn > mmax) {\n        istep = mmax << 1;\n        wpi = Math.sin(theta);\n        theta *= 0.5;\n        wpr = Math.sin(theta);\n        wpr *= -2.0 * wpr;\n\n        // ---------------------------------------------\n        // special case for the inner loop when m = 1:\n        // wr = 1 / wi = 0\n        for (i = 1; i <= nn; i += istep) {\n            j = i + mmax;\n            tempr = data[j - 1];\n            tempi = data[j];\n            data[j - 1] = data[i - 1] - tempr;\n            data[j] = data[i] - tempi;\n            data[i - 1] += tempr;\n            data[i] += tempi;\n        }\n\n        wr = 1.0 + wpr;\n        wi = wpi;\n        // ---------------------------------------------\n\n        halfmmax = ((mmax >>> 1) + 1);\n\n        for (m = 3; m < halfmmax; m += 2) {\n            for (i = m; i <= nn; i += istep) {\n                j = i + mmax;\n                tempr = (wr * (dj1 = data[j - 1])) - (wi * (dj = data[j]));\n                tempi = (wr * dj) + (wi * dj1);\n                data[j - 1] = data[i - 1] - tempr;\n                data[j] = data[i] - tempi;\n                data[i - 1] += tempr;\n                data[i] += tempi;\n            }\n            wr += ((tempr = wr) * wpr) - (wi * wpi);\n            wi += (wi * wpr) + (tempr * wpi);\n        }\n\n        // ---------------------------------------------\n        // special case for the inner loop when m = ((mmax >>> 1) + 1):\n        // wr = 0 / wi = isign\n        if (isign === 1) {\n            for (i = m; i <= nn; i += istep) {\n                j = i + mmax;\n                tempr = -data[j];\n                tempi = data[j - 1];\n                data[j - 1] = data[i - 1] - tempr;\n                data[j] = data[i] - tempi;\n                data[i - 1] += tempr;\n                data[i] += tempi;\n            }\n            wr = -wpi;\n            wi = 1.0 + wpr;\n        }\n        else {\n            for (i = m; i <= nn; i += istep) {\n                j = i + mmax;\n                tempr = data[j];\n                tempi = -data[j - 1];\n                data[j - 1] = data[i - 1] - tempr;\n                data[j] = data[i] - tempi;\n                data[i - 1] += tempr;\n                data[i] += tempi;\n            }\n            wr = wpi;\n            wi = -1.0 - wpr;\n        }\n\n        m += 2;\n        // ---------------------------------------------\n\n        for (; m < mmax; m += 2) {\n            for (i = m; i <= nn; i += istep) {\n                j = i + mmax;\n                tempr = (wr * (dj1 = data[j - 1])) - (wi * (dj = data[j]));\n                tempi = (wr * dj) + (wi * dj1);\n                data[j - 1] = data[i - 1] - tempr;\n                data[j] = data[i] - tempi;\n                data[i - 1] += tempr;\n                data[i] += tempi;\n            }\n            wr += ((tempr = wr) * wpr) - (wi * wpi);\n            wi += (wi * wpr) + (tempr * wpi);\n        }\n\n        mmax = istep;\n    }\n}\n\nexport function FFTReal(data: Float32Array, n: number, isign: number) {\n    let i: number;\n    let i1: number;\n    let i2: number;\n    let i3: number;\n    let i4: number;\n    let d1: number;\n    let d2: number;\n    let d3: number;\n    let d4: number;\n    const n4 = n >>> 2;\n    let c2: number;\n    let h1r: number;\n    let h1i: number;\n    let h2r: number;\n    let h2i: number;\n    let wr: number;\n    let wi: number;\n    let wpr: number;\n    let wpi: number;\n    let theta = Math.PI / (n >>> 1);\n\n    if (isign === 1) {\n        c2 = -0.5;\n        FFTComplex(data, n >>> 1, 1);\n    }\n    else {\n        c2 = 0.5;\n        theta = -theta;\n    }\n\n    wpr = Math.sin(0.5 * theta);\n    wr = 1.0 + (wpr *= (-2.0 * wpr));\n    wi = (wpi = Math.sin(theta));\n\n    for (i = 1; i < n4; i++) {\n        i2 = 1 + (i1 = (i << 1));\n        i4 = 1 + (i3 = (n - i1));\n        h1r = 0.5 * ((d1 = data[i1]) + (d3 = data[i3]));\n        h1i = 0.5 * ((d2 = data[i2]) - (d4 = data[i4]));\n        h2r = -c2 * (d2 + d4);\n        h2i = c2 * (d1 - d3);\n        data[i1] = h1r + (d1 = (wr * h2r)) - (d2 = (wi * h2i));\n        data[i2] = h1i + (d3 = (wr * h2i)) + (d4 = (wi * h2r));\n        data[i3] = h1r - d1 + d2;\n        data[i4] = d3 + d4 - h1i;\n        wr += ((h1r = wr) * wpr) - (wi * wpi);\n        wi += (wi * wpr) + (h1r * wpi);\n    }\n\n    if (isign === 1) {\n        data[0] = (h1r = data[0]) + data[1];\n        data[1] = h1r - data[1];\n    }\n    else {\n        data[0] = 0.5 * ((h1r = data[0]) + data[1]);\n        data[1] = 0.5 * (h1r - data[1]);\n        FFTComplex(data, n >>> 1, -1);\n        h1r = 2.0 / n;\n\n        for (i = n - 1; i >= 0; i--) {\n            data[i] *= h1r;\n        }\n    }\n}\n","/**\n * canvas-equalizer is distributed under the FreeBSD License\n *\n * Copyright (c) 2012-2017 Armando Meziat, Carlos Rafael Gimenes das Neves\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice, this\n *    list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * The views and conclusions contained in the software and documentation are those\n * of the authors and should not be interpreted as representing official policies,\n * either expressed or implied, of the FreeBSD Project.\n *\n * https://github.com/radiojhero/canvas-equalizer\n */\n\n/* tslint:disable:no-magic-numbers no-bitwise */\n\nimport deepAssign from 'deep-assign';\nimport { FFTReal } from './FFTNR';\nimport IEqualizerOptions from './IEqualizerOptions';\n\nconst defaultOptions: IEqualizerOptions = {\n    validYRangeHeight: 255,\n    visibleBinCount: 512,\n};\n\nexport default class Equalizer {\n\n    private _options: IEqualizerOptions;\n    private _visibleFrequencies: Float32Array;\n    private _equivalentZones: Uint16Array;\n    private _equivalentZonesFrequencyCount: Float32Array;\n    private _zeroChannelValueY: number;\n    public _maximumChannelValue: number;\n    public _minimumChannelValue: number;\n    public _minusInfiniteChannelValue: number;\n    private _maximumChannelValueY: number;\n    private _minimumChannelValueY: number;\n    private _filterLength: number;\n    private _sampleRate: number;\n    private _isNormalized: boolean;\n    public _binCount: number;\n    private _audioContext: AudioContext;\n    private _filterKernel: AudioBuffer;\n    private _convolver: ConvolverNode;\n    private _tmp: Float32Array;\n    private _channelCurves: Int16Array[];\n    private _actualChannelCurve: Int16Array;\n    private _channelIndex: number;\n\n    constructor(filterLength: number, audioContext: AudioContext, options: IEqualizerOptions = {}) {\n        Equalizer._validateFilterLength(filterLength);\n\n        this._options = deepAssign({}, defaultOptions, options);\n        this._filterLength = filterLength;\n        this._sampleRate = audioContext.sampleRate || 44100;\n        this._isNormalized = false;\n        this._binCount = (filterLength >>> 1) + 1;\n        this._audioContext = audioContext;\n        this._filterKernel = audioContext.createBuffer(2, filterLength, this._sampleRate);\n        this._tmp = new Float32Array(filterLength);\n        this._channelCurves = [\n            new Int16Array(this._options.visibleBinCount!), new Int16Array(this._options.visibleBinCount!)];\n        this._actualChannelCurve = new Int16Array(this._options.visibleBinCount!);\n        this._channelIndex = -1;\n\n        this._zeroChannelValueY = this._options.validYRangeHeight! >>> 1;\n        this._maximumChannelValue = this._options.validYRangeHeight! >>> 1;\n        this._minimumChannelValue = -(this._options.validYRangeHeight! >>> 1);\n        this._minusInfiniteChannelValue = -(this._options.validYRangeHeight! >>> 1) - 1;\n        this._maximumChannelValueY = 0;\n        this._minimumChannelValueY = this._options.validYRangeHeight! - 1;\n\n        this._visibleFrequencies = new Float32Array(this._options.visibleBinCount!);\n        this._equivalentZones = new Uint16Array([31, 62, 125, 250, 500, 1000, 2000, 4000, 8000, 16000]);\n\n        /* [0, +9, +9, +18, +35, +36, +70, +72, +72, +72, visibleBinCount] */\n        let eqz = [0, 9, 18, 36, 71, 107, 177, 249, 321, 393, 512];\n        const ratio = this._options.visibleBinCount! / eqz[eqz.length - 1];\n        let freqSteps = [5, 5, 5, 5, 10, 10, 20, 40, 80, 89];\n        const firstFreqs = [5, 50, 95, 185, 360, 720, 1420, 2860, 5740, 11498];\n        let f = firstFreqs[0];\n\n        if (this._options.visibleBinCount! !== eqz[eqz.length - 1]) {\n            eqz = eqz.map((num: number) => Math.round(num * ratio));\n            freqSteps = freqSteps.map((num: number) => num / ratio);\n        }\n\n        this._equivalentZonesFrequencyCount = new Float32Array(eqz);\n\n        for (let i = 0, s = 0; i < this._options.visibleBinCount!; i++) {\n            this._visibleFrequencies[i] = f;\n            if (s !== eqz.length - 1 && s !== firstFreqs.length - 1 && i + 1 >= eqz[s + 1]) {\n                s++;\n                f = firstFreqs[s];\n            }\n            else {\n                f += freqSteps[s];\n            }\n        }\n\n        this.reset();\n        this._convolver = audioContext.createConvolver();\n        this._convolver.normalize = false;\n        this._convolver.buffer = this._filterKernel;\n    }\n\n    public reset() {\n        for (let i = this._options.visibleBinCount! - 1; i >= 0; i--) {\n            this._channelCurves[0][i] = this._zeroChannelValueY;\n            this._channelCurves[1][i] = this._zeroChannelValueY;\n            this._actualChannelCurve[i] = this._zeroChannelValueY;\n        }\n\n        this.updateFilter(true);\n        this.updateActualChannelCurve(0);\n    }\n\n    public clampY(y: number): number {\n        const maxY = this._maximumChannelValueY;\n        const minY = this._minimumChannelValueY;\n\n        return y <= maxY ? maxY : (y > minY ? this._options.validYRangeHeight! + 1 : y);\n    }\n\n    public yToDB(y: number): number {\n        const maxY = this._maximumChannelValueY;\n        const minY = this._minimumChannelValueY;\n\n        return y <= maxY ? 40 : (y > minY ? -Infinity : Equalizer._lerp(maxY, 40, minY, -40, y));\n    }\n\n    public yToMagnitude(y: number): number {\n        // 40dB = 100\n        // -40dB = 0.01\n        // magnitude = 10 ^ (dB/20)\n        // log a (x^p) = p * log a (x)\n        // x^p = a ^ (p * log a (x))\n        // 10^p = e ^ (p * log e (10))\n        const maxY = this._maximumChannelValueY;\n        const minY = this._minimumChannelValueY;\n\n        return y <= maxY ? 100 :\n            (y > minY ? 0 : Math.exp(Equalizer._lerp(maxY, 2, minY, -2, y) * Math.LN10)); // 2 = 40dB/20\n    }\n\n    public magnitudeToY(magnitude: number): number {\n        // 40dB = 100\n        // -40dB = 0.01\n        const zcy = this._zeroChannelValueY;\n\n        return magnitude >= 100\n               ? this._maximumChannelValueY\n               : (magnitude < 0.01\n                  ? this._options.validYRangeHeight! + 1\n                  : Math.round((zcy - (zcy * Math.log(magnitude) / Math.LN10 * 0.5)) - 0.4));\n    }\n\n    public visibleBinToZoneIndex(visibleBinIndex: number): number {\n        if (visibleBinIndex >= (this._options.visibleBinCount! - 1)) {\n            return this._equivalentZones.length - 1;\n        }\n        else if (visibleBinIndex > 0) {\n            const z = this._equivalentZonesFrequencyCount;\n\n            for (let i = z.length - 1; i >= 0; i--) {\n                if (visibleBinIndex >= z[i]) {\n                    return i;\n                }\n            }\n        }\n\n        return 0;\n    }\n\n    public visibleBinToFrequency(visibleBinIndex: number): number {\n        const vf = this._visibleFrequencies;\n        const vbc = this._options.visibleBinCount!;\n\n        if (visibleBinIndex >= vbc - 1) {\n            return vf[vbc - 1];\n        }\n        else if (visibleBinIndex > 0) {\n            return vf[visibleBinIndex];\n        }\n\n        return vf[0];\n    }\n\n    public visibleBinToFrequencyGroup(visibleBinIndex: number): number[] {\n        const ez = this._equivalentZones;\n        const vf = this._visibleFrequencies;\n        const vbc = this._options.visibleBinCount!;\n\n        if (visibleBinIndex >= vbc - 1) {\n            return [Math.round(vf[vbc - 1]), Math.round(ez[ez.length - 1])];\n        }\n        else if (visibleBinIndex > 0) {\n            const ezc = this._equivalentZonesFrequencyCount;\n\n            for (let i = ezc.length - 1; i >= 0; i--) {\n                if (visibleBinIndex >= ezc[i]) {\n                    return [Math.round(vf[visibleBinIndex]), Math.round(ez[i])];\n                }\n            }\n        }\n\n        return [Math.round(vf[0]), Math.round(ez[0])];\n    }\n\n    public changeZoneY(channelIndex: number, x: number, y: number) {\n        let i = this.visibleBinToZoneIndex(x);\n        const ii = this._equivalentZonesFrequencyCount[i + 1];\n        const cy = this.clampY(y);\n        const curve = this._channelCurves[channelIndex];\n\n        for (i = this._equivalentZonesFrequencyCount[i]; i < ii; i++) {\n            curve[i] = cy;\n        }\n    }\n\n    private _updateBuffer() {\n        if (this._options.convolverCallback) {\n            const oldConvolver = this._convolver;\n            this._convolver = this.audioContext.createConvolver();\n            this._convolver.normalize = false;\n            this._convolver.buffer = this._filterKernel;\n            this._options.convolverCallback(oldConvolver, this._convolver);\n        } else {\n            this._convolver.buffer = this._filterKernel;\n        }\n    }\n\n    public copyFilter(sourceChannel: number, destinationChannel: number) {\n        const src = this._filterKernel.getChannelData(sourceChannel);\n        const dst = this._filterKernel.getChannelData(destinationChannel);\n\n        for (let i = (this._filterLength - 1); i >= 0; i--) {\n            dst[i] = src[i];\n        }\n\n        if (this._convolver) {\n            this._updateBuffer();\n        }\n    }\n\n    public updateFilter(updateBothChannels: boolean) {\n        const channelIndex = Math.max(this._channelIndex, 0);\n        const isSameFilterLR = channelIndex === -1;\n        const filterLength = this._filterLength;\n        const curve = this._channelCurves[channelIndex];\n        const valueCount = this._options.visibleBinCount!;\n        const bw = this._sampleRate / filterLength;\n        const filterLength2 = (filterLength >>> 1);\n        const filter = this._filterKernel.getChannelData(channelIndex);\n        const _visibleFrequencies = this._visibleFrequencies;\n        /* M = filterLength2, so, M_HALF_PI_FFTLEN2 = (filterLength2 * 0.5 * Math.PI) / filterLength2 */\n        const M_HALF_PI_FFTLEN2 = 0.5 * Math.PI;\n        let invMaxMag = 1;\n        let repeat = Number(this._isNormalized) + 1;\n\n        // fill in all filter points, either averaging or interpolating them as necessary\n        do {\n            repeat--;\n            let i = 1;\n            let ii = 0;\n\n            // tslint:disable-next-line:no-constant-condition\n            while (true) {\n                const freq = bw * i;\n\n                if (freq >= _visibleFrequencies[0]) {\n                    break;\n                }\n\n                const mag = this.yToMagnitude(curve[0]);\n                filter[i << 1] = mag * invMaxMag;\n                i++;\n            }\n\n            while (bw > _visibleFrequencies[ii + 1] - _visibleFrequencies[ii] &&\n                   i < filterLength2 && ii < valueCount - 1) {\n                const freq = bw * i;\n                let avg = 0;\n                let avgCount = 0;\n\n                do {\n                    avg += curve[ii];\n                    avgCount++;\n                    ii++;\n                } while (freq > _visibleFrequencies[ii] && ii < valueCount - 1);\n\n                const mag = this.yToMagnitude(avg / avgCount);\n                filter[i << 1] = mag * invMaxMag;\n                i++;\n            }\n\n            for (; i < filterLength2; i++) {\n                const freq = bw * i;\n                let mag: number;\n\n                if (freq >= _visibleFrequencies[valueCount - 1]) {\n                    mag = this.yToMagnitude(curve[valueCount - 1]);\n                }\n                else {\n                    while (ii < (valueCount - 1) && freq > _visibleFrequencies[ii + 1]) {\n                        ii++;\n                    }\n\n                    mag = this.yToMagnitude(\n                        Equalizer._lerp(_visibleFrequencies[ii], curve[ii],\n                                       _visibleFrequencies[ii + 1], curve[ii + 1], freq));\n                }\n                filter[i << 1] = mag * invMaxMag;\n            }\n            // since DC and Nyquist are purely real, do not bother with them in the for loop,\n            // just make sure neither one has a gain greater than 0 dB\n            filter[0] = (filter[2] >= 1 ? 1 : filter[2]);\n            filter[1] = (filter[filterLength - 2] >= 1 ? 1 : filter[filterLength - 2]);\n\n            // convert the coordinates from polar to rectangular\n            for (i = filterLength - 2; i >= 2; i -= 2) {\n                /*                -k.j\n                 * polar = Mag . e\n                 *\n                 * where:\n                 * k = (M / 2) * pi * i / (fft length / 2)\n                 * i = index varying from 0 to (fft length / 2)\n                 *\n                 * rectangular:\n                 * real = Mag . cos(-k)\n                 * imag = Mag . sin(-k)\n                 */\n                const k = M_HALF_PI_FFTLEN2 * (i >>> 1);\n                /* ****NOTE:\n                 * when using FFTReal ou FFTNR, k MUST BE passed as the argument of sin and cos, due to the\n                 * signal of the imaginary component\n                 * RFFT, intel and other fft's use the opposite signal... therefore, -k MUST BE passed!!\n                 */\n                filter[i + 1] = (filter[i] * Math.sin(k));\n                filter[i] *= Math.cos(k);\n            }\n\n            FFTReal(filter, filterLength, -1);\n\n            if (repeat) {\n                // get the actual filter response, and then, compensate\n                invMaxMag = this._applyWindowAndComputeActualMagnitudes(filter);\n\n                if (invMaxMag <= 0) {\n                    repeat = 0;\n                }\n\n                invMaxMag = 1.0 / invMaxMag;\n            }\n        } while (repeat);\n\n        if (isSameFilterLR) {\n            // copy the filter to the other channel\n            this.copyFilter(channelIndex, 1 - channelIndex);\n            return;\n        }\n\n        if (updateBothChannels) {\n            // update the other channel as well\n            const oldChannelIndex = this._channelIndex;\n\n            this._channelIndex = 1 - channelIndex;\n            this.updateFilter(false);\n            this._channelIndex = oldChannelIndex;\n            return;\n        }\n\n        if (this._convolver) {\n            this._updateBuffer();\n        }\n    }\n\n    public updateActualChannelCurve(channelIndex: number) {\n        const filterLength = this._filterLength;\n        const curve = this._actualChannelCurve;\n        const valueCount = this._options.visibleBinCount!;\n        const bw = this._sampleRate / filterLength;\n        const filterLength2 = (filterLength >>> 1);\n        const tmp = this._tmp;\n        const _visibleFrequencies = this._visibleFrequencies;\n        const filter = this._filterKernel.getChannelData(channelIndex);\n\n        this._applyWindowAndComputeActualMagnitudes(filter);\n\n        // tmp now contains (filterLength2 + 1) magnitudes\n        let i = 0;\n        let ii = 0;\n\n        while (ii < valueCount - 1 && i < filterLength2 && bw > _visibleFrequencies[ii + 1] - _visibleFrequencies[ii]) {\n            let freq = bw * i;\n\n            while (i < filterLength2 && freq + bw < _visibleFrequencies[ii]) {\n                i++;\n                freq = bw * i;\n            }\n\n            curve[ii] = this.magnitudeToY(\n                Equalizer._lerp(freq, tmp[i], freq + bw, tmp[i + 1], _visibleFrequencies[ii]));\n            ii++;\n        }\n\n        i++;\n\n        while (i < filterLength2 && ii < valueCount) {\n            let freq: number;\n            let avg = 0;\n            let avgCount = 0;\n\n            do {\n                avg += tmp[i];\n                avgCount++;\n                i++;\n                freq = bw * i;\n            } while (freq < _visibleFrequencies[ii] && i < filterLength2);\n\n            curve[ii] = this.magnitudeToY(avg / avgCount);\n            ii++;\n        }\n\n        i = (this._sampleRate >>> 1) >= _visibleFrequencies[valueCount - 1]\n            ? curve[ii - 1]\n            : this._options.validYRangeHeight! + 1;\n\n        for (; ii < valueCount; ii++) {\n            curve[ii] = i;\n        }\n    }\n\n    private _applyWindowAndComputeActualMagnitudes(filter: Float32Array): number {\n        const filterLength = this._filterLength;\n        const tmp = this._tmp;\n        const filterLength2 = (filterLength >>> 1);\n        const M = filterLength2;\n        const PI2_M = 2 * Math.PI / M;\n\n        // it is not possible to know what kind of window the browser will use,\n        // so make an assumption here... Blackman window!\n        // ...at least it is the one I used, back in C++ times :)\n        for (let i = M; i >= 0; i--) {\n            /* Hanning window */\n            // tmp[i] = filter[i] * (0.5 - (0.5 * cos(PI2_M * i)));\n            /* Hamming window */\n            // tmp[i] = filter[i] * (0.54 - (0.46 * cos(PI2_M * i)));\n            /* Blackman window */\n            tmp[i] = filter[i] * (0.42 - (0.5 * Math.cos(PI2_M * i)) + (0.08 * Math.cos(2 * PI2_M * i)));\n        }\n\n        for (let i = filterLength - 1; i > M; i--) {\n            tmp[i] = 0;\n        }\n\n        // calculate the spectrum\n        FFTReal(tmp, filterLength, 1);\n        // save Nyquist for later\n        const ii = tmp[1];\n        let maxMag = (tmp[0] > ii ? tmp[0] : ii);\n\n        for (let i = 2; i < filterLength; i += 2) {\n            const rval = tmp[i];\n            const ival = tmp[i + 1];\n            const mag = Math.sqrt((rval * rval) + (ival * ival));\n\n            tmp[i >>> 1] = mag;\n            if (mag > maxMag) {\n                maxMag = mag;\n            }\n        }\n\n        // restore Nyquist in its new position\n        tmp[filterLength2] = ii;\n        return maxMag;\n    }\n\n    private static _validateFilterLength(filterLength: number) {\n        if (filterLength < 8 || (filterLength & (filterLength - 1))) {\n            throw new Error('The FFT size must be power of 2 and not less than 8.');\n        }\n    }\n\n    private static _lerp(x0: number, y0: number, x1: number, y1: number, x: number): number {\n        return ((x - x0) * (y1 - y0) / (x1 - x0)) + y0;\n    }\n\n    // virtual properties\n\n    get filterLength(): number {\n        return this._filterLength;\n    }\n\n    set filterLength(newFilterLength: number) {\n        if (this._filterLength !== newFilterLength) {\n            Equalizer._validateFilterLength(newFilterLength);\n            this._filterLength = newFilterLength;\n            this._binCount = (newFilterLength >>> 1) + 1;\n            this._filterKernel = this._audioContext.createBuffer(2, newFilterLength, this._sampleRate);\n            this._tmp = new Float32Array(newFilterLength);\n            this.updateFilter(true);\n        }\n    }\n\n    get sampleRate(): number {\n        return this._sampleRate;\n    }\n\n    set sampleRate(newSampleRate: number) {\n        if (this.sampleRate !== newSampleRate) {\n            this._sampleRate = newSampleRate;\n            this._filterKernel = this._audioContext.createBuffer(2, this._filterLength, newSampleRate);\n            this.updateFilter(true);\n        }\n    }\n\n    get isNormalized(): boolean {\n        return this._isNormalized;\n    }\n\n    set isNormalized(isNormalized: boolean) {\n        if (this.isNormalized !== isNormalized) {\n            this._isNormalized = isNormalized;\n            this.updateFilter(true);\n        }\n    }\n\n    get audioContext(): AudioContext {\n        return this._audioContext;\n    }\n\n    set audioContext(newAudioContext: AudioContext) {\n        if (this.audioContext !== newAudioContext) {\n            const oldConvolver = this._convolver;\n            this._convolver.disconnect(0);\n            this._audioContext = newAudioContext;\n            this._filterKernel = newAudioContext.createBuffer(2, this._filterLength, this._sampleRate);\n            (this._convolver as any) = null;\n            this.updateFilter(true);\n            this._convolver = newAudioContext.createConvolver();\n            this._convolver.normalize = false;\n            this._convolver.buffer = this._filterKernel;\n            if (this._options.convolverCallback) {\n                this._options.convolverCallback(oldConvolver, this._convolver);\n            }\n        }\n    }\n\n    get options(): IEqualizerOptions {\n        return deepAssign({}, defaultOptions, this._options);\n    }\n\n    get visibleFrequencies(): Float32Array {\n        return this._visibleFrequencies;\n    }\n\n    get channelCurves(): Int16Array[] {\n        return this._channelCurves.slice();\n    }\n\n    get actualChannelCurve(): Int16Array {\n        return this._actualChannelCurve;\n    }\n\n    get convolver(): ConvolverNode {\n        return this._convolver;\n    }\n\n    get channelIndex(): number {\n        return this._channelIndex;\n    }\n\n    get zeroChannelValueY(): number {\n        return this._zeroChannelValueY;\n    }\n\n    get equivalentZonesFrequencyCount(): Float32Array {\n        return this._equivalentZonesFrequencyCount;\n    }\n\n    set channelIndex(newChannelIndex: number) {\n        this._channelIndex = newChannelIndex;\n    }\n}\n","/**\n * canvas-equalizer is distributed under the FreeBSD License\n *\n * Copyright (c) 2012-2017 Armando Meziat, Carlos Rafael Gimenes das Neves\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice, this\n *    list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * The views and conclusions contained in the software and documentation are those\n * of the authors and should not be interpreted as representing official policies,\n * either expressed or implied, of the FreeBSD Project.\n *\n * https://github.com/radiojhero/canvas-equalizer\n */\n\nimport defaultLocale from '../locales/en.json';\n\nimport ILocale from './ILocale';\n\ninterface ILocaleSet {\n    [langId: string]: ILocale;\n}\n\nconst defaultLanguage = 'en';\n\nexport default class L10n {\n\n    private _language: string;\n    private _locales: ILocaleSet = {};\n\n    constructor(language: string = defaultLanguage) {\n        this._language = language;\n        this.loadLocale(defaultLanguage, defaultLocale);\n    }\n\n    public loadLocale(language: string, locale: ILocale) {\n        this._locales[language] = locale;\n    }\n\n    public get(tag: string) {\n        let locales = this._locales[this._language] || this._locales[defaultLanguage];\n\n        if (locales[tag] === undefined) {\n            locales = this._locales[defaultLanguage];\n        }\n\n        return locales[tag];\n    }\n\n    public format(str: string, ...args: any[]): string {\n        str = this.get(str);\n        args.forEach((arg: any, i: number) => {\n            str = str.replace(new RegExp(`\\\\{${i}\\\\}`, 'g'), arg.toLocaleString(this._language));\n        });\n\n        return str;\n    }\n\n    get language(): string {\n        return this._language;\n    }\n\n    set language(language: string) {\n        this._language = language;\n    }\n}\n","/**\n * canvas-equalizer is distributed under the FreeBSD License\n *\n * Copyright (c) 2012-2017 Armando Meziat, Carlos Rafael Gimenes das Neves\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice, this\n *    list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * The views and conclusions contained in the software and documentation are those\n * of the authors and should not be interpreted as representing official policies,\n * either expressed or implied, of the FreeBSD Project.\n *\n * https://github.com/radiojhero/canvas-equalizer\n */\n\nimport deepAssign from 'deep-assign';\n\nimport {\n    keyPressed,\n    elemCoords,\n    attachPointer, detachPointer, cancelEvent,\n    throttledFunction, addThrottledEvent, removeThrottledEvent,\n} from './Common';\n\nimport Equalizer from './Equalizer';\nimport L10n from './L10n';\n\nimport ICanvasEqualizerOptions from './ICanvasEqualizerOptions';\nimport ILocale from './ILocale';\n\nconst defaultOptions: ICanvasEqualizerOptions = {\n    classNamespace: 'GE',\n    filterOptions: {},\n    updateFilterOnDrag: true,\n};\n\nexport default class CanvasEqualizer {\n\n    private _options: ICanvasEqualizerOptions;\n    private _filter: Equalizer;\n    private _element: HTMLElement;\n    private _canvas: HTMLCanvasElement;\n    private _ctx: CanvasRenderingContext2D;\n    private _rangeImage: CanvasGradient;\n    private _btnMnu: HTMLButtonElement;\n    private _mnu: HTMLElement;\n    private _mnuChBL: HTMLButtonElement;\n    private _mnuChL: HTMLButtonElement;\n    private _mnuChBR: HTMLButtonElement;\n    private _mnuChR: HTMLButtonElement;\n    private _mnuShowZones: HTMLButtonElement;\n    private _mnuEditZones: HTMLButtonElement;\n    private _mnuNormalizeCurves: HTMLButtonElement;\n    private _mnuShowActual: HTMLButtonElement;\n    private _lblCursor: HTMLElement;\n    private _lblCurve: HTMLElement;\n    private _lblFrequency: HTMLElement;\n    private _stb: HTMLElement;\n    private _showZones = false;\n    private _editZones = false;\n    private _isActualChannelCurveNeeded = true;\n    private _currentChannelIndex = 0;\n    private _isSameFilterLR = true;\n    private _drawingMode = 0;\n    private _lastDrawX = 0;\n    private _lastDrawY = 0;\n    private _barHideTimeout: number;\n    private _l10n: L10n;\n    private _isRTL = false;\n\n    constructor(filterLength: number, audioContext: AudioContext, options: ICanvasEqualizerOptions = {}) {\n        this._options = deepAssign({}, defaultOptions, options);\n        this._filter = new Equalizer(filterLength, audioContext, this._options.filterOptions);\n        this._l10n = new L10n(this._options.language);\n    }\n\n    public createControl(placeholder: HTMLElement): HTMLCanvasElement {\n        if (!this._ctx) {\n            const createLabel = (name: string, content: string) => {\n                const lbl = document.createElement('div');\n                lbl.className = `${clsNS}LBL ${clsNS}LBL${name}`;\n                lbl.innerHTML = this._l10n.get(content);\n                return lbl;\n            };\n            const createMenuSep = () => {\n                const s = document.createElement('div');\n                s.className = `${clsNS}MNUSEP`;\n                s.setAttribute('role', 'separator');\n                return s;\n            };\n            const createMenuLabel = (text: string) => {\n                const l = document.createElement('div');\n                l.className = `${clsNS}MNULBL`;\n                l.textContent = this._l10n.get(text);\n                return l;\n            };\n            const createMenuItem = (text: string, checkable: boolean | string, checked: boolean,\n                                    clickHandler: (e: MouseEvent) => any) => {\n                const i = document.createElement('button');\n                i.type = 'button';\n                i.className = `${clsNS}MNUIT ${clsNS}CLK`;\n\n                if (checkable) {\n                    if (typeof checkable === 'string') {\n                        i.dataset['radioGroup'] = checkable;\n                        i.setAttribute('role', 'menuitemradio');\n                    }\n                    else {\n                        i.setAttribute('role', 'menuitemcheckbox');\n                    }\n\n                    const s = document.createElement('span');\n                    s.textContent = typeof checkable === 'string' ? '● ' : '■ ';\n                    i.appendChild(s);\n                    this._checkMenu(i, checked);\n                }\n                else {\n                    i.setAttribute('role', 'menuitem');\n                }\n\n                i.appendChild(document.createTextNode(this._l10n.get(text)));\n\n                if (clickHandler) {\n                    i.addEventListener('click', clickHandler);\n                }\n\n                i.addEventListener('mouseenter', () => {\n                    i.focus();\n                });\n                i.addEventListener('mouseleave', () => {\n                    i.blur();\n                });\n\n                return i;\n            };\n            const clsNS = this._options.classNamespace!;\n\n            this._element = placeholder;\n            placeholder.className = clsNS;\n\n            if (/\\bip(?:[ao]d|hone)\\b/i.test(navigator.userAgent) && !(window as any).MSStream) {\n                placeholder.classList.add(`${clsNS}IOS`);\n            }\n\n            if (getComputedStyle(placeholder).direction === 'rtl') {\n                placeholder.classList.add('RTL');\n                this._isRTL = true;\n            }\n\n            placeholder.addEventListener('contextmenu', cancelEvent);\n\n            this._stb = document.createElement('div');\n            this._stb.className = `${clsNS}STB`;\n            placeholder.appendChild(this._stb);\n\n            this._canvas = document.createElement('canvas');\n            this._canvas.className = `${clsNS}CNV`;\n            attachPointer(this._canvas, 'down', this._canvasMouseDown);\n            attachPointer(this._canvas, 'move', this._canvasMouseMove);\n            attachPointer(this._canvas, 'up', this._canvasMouseUp);\n            this._canvas.addEventListener('contextmenu', cancelEvent);\n            placeholder.appendChild(this._canvas);\n            addThrottledEvent(window, 'resize', this._windowResize);\n\n            const ctx = this._canvas.getContext('2d');\n\n            if (!ctx) {\n                throw new Error('Unable to get a 2D context.');\n            }\n\n            this._ctx = ctx;\n\n            this._stb.appendChild(this._lblCursor = createLabel('CSR', 'cursor.label'));\n            this._stb.appendChild(this._lblCurve = createLabel('CRV', 'curve.label'));\n            this._stb.appendChild(this._lblFrequency = createLabel('FRQ', 'frequency.label'));\n            this._setStatusBar(0, this._filter.zeroChannelValueY, this._filter.zeroChannelValueY);\n\n            this._btnMnu = document.createElement('button');\n            this._btnMnu.type = 'button';\n            this._btnMnu.className = `${clsNS}BTN ${clsNS}CLK`;\n            this._btnMnu.setAttribute('aria-haspopup', 'true');\n            this._btnMnu.setAttribute('aria-label', this._l10n.get('menu'));\n            this._btnMnu.addEventListener('click', this._btnMnuClick);\n            this._btnMnu.addEventListener('keydown', this._btnMnuKeyDown);\n            this._btnMnu.addEventListener('mouseenter', () => {\n                this._btnMnu.focus();\n            });\n            this._btnMnu.addEventListener('mouseleave', () => {\n                this._btnMnu.blur();\n            });\n            this._stb.appendChild(this._btnMnu);\n\n            this._mnu = document.createElement('div');\n            this._mnu.className = `${clsNS}MNU`;\n            this._mnu.setAttribute('role', 'menu');\n            this._mnu.addEventListener('keydown', this._mnuKeyDown);\n            this._mnu.appendChild(createMenuLabel('menu.both'));\n            this._mnu.appendChild(this._mnuChBL =\n                createMenuItem('menu.both.left', 'curve', true, this._mnuChBLClick));\n            this._mnu.appendChild(this._mnuChBR =\n                createMenuItem('menu.both.right', 'curve', false, this._mnuChBRClick));\n            this._mnu.appendChild(createMenuSep());\n            this._mnu.appendChild(createMenuLabel('menu.one'));\n            this._mnu.appendChild(this._mnuChL =\n                createMenuItem('menu.one.left', 'curve', false, this._mnuChLClick));\n            this._mnu.appendChild(this._mnuChR =\n                createMenuItem('menu.one.right', 'curve', false, this._mnuChRClick));\n            this._mnu.appendChild(createMenuSep());\n            this._mnu.appendChild(this._mnuShowZones =\n                createMenuItem('menu.zones', true, false, this._mnuShowZonesClick));\n            this._mnu.appendChild(this._mnuEditZones =\n                createMenuItem('menu.zoneEdit', true, false, this._mnuEditZonesClick));\n            this._mnu.appendChild(createMenuSep());\n            this._mnu.appendChild(this._mnuNormalizeCurves =\n                createMenuItem('menu.normalizeCurves', true, false, this._mnuNormalizeCurvesClick));\n            this._mnu.appendChild(this._mnuShowActual =\n                createMenuItem('menu.actualResponse', true, true, this._mnuShowActualClick));\n            this._stb.appendChild(this._mnu);\n            this._toggleMenu(false);\n\n            this._fixCanvasSize();\n            this._drawCurve();\n        }\n        return this._canvas;\n    }\n\n    public destroyControl() {\n        if (this._ctx) {\n            removeThrottledEvent(window, 'resize', this._windowResize);\n            delete this._canvas;\n            delete this._lblCursor;\n            delete this._lblCurve;\n            delete this._lblFrequency;\n            delete this._btnMnu;\n            delete this._mnu;\n            delete this._mnuChBL;\n            delete this._mnuChL;\n            delete this._mnuChBR;\n            delete this._mnuChR;\n            delete this._mnuShowZones;\n            delete this._mnuEditZones;\n            delete this._mnuNormalizeCurves;\n            delete this._mnuShowActual;\n            delete this._stb;\n            delete this._ctx;\n            delete this._rangeImage;\n            this._element.innerHTML = '';\n            delete this._element;\n            clearTimeout(this._barHideTimeout);\n        }\n    }\n\n    public reset() {\n        this._filter.reset();\n        this._drawCurve();\n    }\n\n    public loadLocale(language: string, locale: ILocale) {\n        this._l10n.loadLocale(language, locale);\n    }\n\n    /* tslint:disable:no-magic-numbers */\n    private _formatDB(dB: number): string {\n        if (dB < -40) {\n            dB = -Infinity;\n        }\n\n        const ret = dB.toLocaleString(this._l10n.language, { minimumFractionDigits: 2, maximumFractionDigits: 2 });\n        return dB < 0 ? ret.replace('-', '−') : (dB === 0 ? '−' + ret : '+' + ret);\n    }\n\n    private _formatFrequencyUnit = (frequency: number, compact: boolean): string => {\n        let unit = 'Hz';\n\n        if (compact) {\n            if (frequency >= 1000) {\n                unit = 'k' + unit;\n                frequency = frequency / 1000;\n            }\n        }\n\n        return this._l10n.format('frequency.format', frequency, this._l10n.get(`frequency.unit.${unit}`));\n    }\n\n    private _formatFrequency(frequencyAndEquivalent: number[]): string {\n        return this._l10n.format('frequency.text',\n            ...frequencyAndEquivalent.map((frequency: number, i: number) => this._formatFrequencyUnit(frequency, !!i)));\n    }\n    /* tslint:enable:no-magic-numbers */\n\n    private _checkMenu(mnu: HTMLButtonElement, chk: boolean) {\n\n        function inner(elem: HTMLElement, toggle: boolean) {\n            if (elem) {\n                elem.style.visibility = toggle ? 'visible' : 'hidden';\n                elem.setAttribute('aria-checked', toggle.toString());\n            }\n        }\n\n        if (chk && mnu.dataset['radioGroup']) {\n            [].slice.call(this._mnu.querySelectorAll(`[data-radio-group=\"${mnu.dataset['radioGroup']}\"]`))\n                .forEach((elem: HTMLButtonElement) => {\n                    inner(elem.firstChild as HTMLElement, false);\n                });\n        }\n\n        inner(mnu.firstChild as HTMLElement, chk);\n    }\n\n    private _drawCurve() {\n        /* tslint:disable:no-magic-numbers */\n        // all the 0.5's here are because of this explanation:\n        // http://stackoverflow.com/questions/195262/can-i-turn-off-antialiasing-on-an-html-canvas-element\n        // \"Draw your 1-pixel lines on coordinates like ctx.lineTo(10.5, 10.5). Drawing a one-pixel line\n        // over the point (10, 10) means, that this 1 pixel at that position reaches from 9.5 to 10.5 which\n        // results in two lines that get drawn on the canvas.\n        function pixelRound(x: number): number {\n            return Math.round(x) + middleOffset;\n        }\n\n        const ctx = this._ctx;\n        const canvas = this._canvas;\n        const pixelRatio = window.devicePixelRatio;\n        const width = canvas.width / pixelRatio;\n        const height = canvas.height / pixelRatio;\n        const widthRatio = this._widthRatio();\n        const heightRatio = this._heightRatio();\n        const widthMinus1 = this._filter.options.visibleBinCount! - 1;\n        const middleOffset = 0.5;\n        let curve = this._filter.channelCurves[this._currentChannelIndex];\n\n        if (!ctx) {\n            return false;\n        }\n\n        ctx.fillStyle = '#303030';\n        ctx.fillRect(0, 0, width, height);\n        ctx.lineWidth = 1;\n        ctx.strokeStyle = '#5a5a5a';\n        ctx.beginPath();\n        let x = width + 1 + middleOffset;\n        let y = pixelRound(this._filter.zeroChannelValueY * heightRatio);\n        ctx.moveTo(x, y);\n\n        while (x > 0) {\n            ctx.lineTo(x - 4, y);\n            x -= 10;\n            ctx.moveTo(x, y);\n        }\n\n        ctx.stroke();\n        ctx.font = 'bold 10pt Verdana';\n        ctx.textAlign = this._isRTL ? 'left' : 'right';\n        ctx.fillStyle = '#5a5a5a';\n        ctx.fillText('\\u200e−0dB', this._isRTL ? 1 : width - 1,\n            Math.round(this._filter.zeroChannelValueY * heightRatio) - 2);\n        ctx.beginPath();\n        x = width - 1 - middleOffset;\n        y = pixelRound(this._filter.options.validYRangeHeight! * heightRatio);\n        ctx.moveTo(x, y);\n\n        while (x > 0) {\n            ctx.lineTo(x - 4, y);\n            x -= 10;\n            ctx.moveTo(x, y);\n        }\n\n        ctx.stroke();\n        ctx.fillText('\\u200e−∞dB', this._isRTL ? 1 : width - 1,\n            Math.round(this._filter.options.validYRangeHeight! * heightRatio) - 2);\n\n        if (this._showZones) {\n            for (let i = this._filter.equivalentZonesFrequencyCount.length - 2; i > 0; i--) {\n                x = pixelRound(this._filter.equivalentZonesFrequencyCount[i] * widthRatio);\n                y = 0;\n                ctx.beginPath();\n                ctx.moveTo(x, y);\n\n                while (y < height) {\n                    ctx.lineTo(x, y + 4);\n                    y += 10;\n                    ctx.moveTo(x, y);\n                }\n\n                ctx.stroke();\n            }\n        }\n\n        ctx.strokeStyle = this._isActualChannelCurveNeeded && !this._drawingMode ? '#707070' : this._rangeImage;\n        ctx.beginPath();\n        ctx.moveTo(0.5, pixelRound(curve[0] * heightRatio));\n\n        for (x = 1; x < widthMinus1; x++) {\n            ctx.lineTo(pixelRound(x * widthRatio), pixelRound(curve[x] * heightRatio));\n        }\n\n        // just to fill up the last pixel!\n        ctx.lineTo(Math.round(x * widthRatio) + 1, pixelRound(curve[x] * heightRatio));\n        ctx.stroke();\n\n        if (this._isActualChannelCurveNeeded && !this._drawingMode) {\n            curve = this._filter.actualChannelCurve;\n            ctx.strokeStyle = this._rangeImage;\n            ctx.beginPath();\n            ctx.moveTo(middleOffset, pixelRound(curve[0] * heightRatio));\n\n            for (x = 1; x < widthMinus1; x++) {\n                ctx.lineTo(pixelRound(x * widthRatio),\n                    pixelRound(curve[x] * heightRatio));\n            }\n\n            // just to fill up the last pixel!\n            ctx.lineTo(Math.round(x * widthRatio) + 1, pixelRound(curve[x] * heightRatio));\n            ctx.stroke();\n        }\n\n        return true;\n        /* tslint:enable:no-magic-numbers */\n    }\n\n    private _widthRatio(): number {\n        return this._canvas.width / window.devicePixelRatio / this._filter.options.visibleBinCount!;\n    }\n\n    private _heightRatio(): number {\n        const height = this._stb.clientHeight;\n        // tslint:disable-next-line:no-magic-numbers\n        return (this._canvas.height / window.devicePixelRatio - height - 5) / this._filter.options.validYRangeHeight!;\n    }\n\n    private _fixCanvasSize() {\n        this._canvas.style.display = 'none';\n        const rect = this._element.getBoundingClientRect();\n        const pixelRatio = window.devicePixelRatio;\n        this._canvas.style.display = '';\n        this._canvas.style.width = rect.width + 'px';\n        this._canvas.style.height = rect.height + 'px';\n        this._canvas.width = rect.width * pixelRatio;\n        this._canvas.height = rect.height * pixelRatio;\n\n        this._ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n\n        /* tslint:disable:no-magic-numbers */\n        this._rangeImage = this._ctx.createLinearGradient(0, 0, 0, rect.height - this._stb.clientHeight - 5);\n        this._rangeImage.addColorStop(0, '#ff0000');\n        this._rangeImage.addColorStop(0.1875, '#ffff00');\n        this._rangeImage.addColorStop(0.39453125, '#00ff00');\n        this._rangeImage.addColorStop(0.60546875, '#00ffff');\n        this._rangeImage.addColorStop(0.796875, '#0000ff');\n        this._rangeImage.addColorStop(1, '#ff00ff');\n        /* tslint:enable:no-magic-numbers */\n\n        this._drawCurve();\n    }\n\n    private _wrappedUpdateFilter = () => {\n        this._filter.updateFilter(false);\n    }\n\n    private _setLabelParam(label: HTMLElement, text: string) {\n        const span = label.querySelector('span');\n\n        if (span) {\n            span.textContent = text;\n        }\n    }\n\n    private _setStatusBar(x: number, y: number, curveY: number) {\n        this._setLabelParam(this._lblCursor, this._formatDB(this._filter.yToDB(y)));\n        this._setLabelParam(this._lblCurve, this._formatDB(this._filter.yToDB(curveY)));\n        this._setLabelParam(this._lblFrequency, this._formatFrequency(this._filter.visibleBinToFrequencyGroup(x)));\n    }\n\n    private _toggleMenu(toggle?: boolean) {\n        toggle = toggle === undefined ? this._mnu.style.display === 'none' : toggle;\n\n        this._mnu.style.display = toggle ? '' : 'none';\n        this._btnMnu.textContent = toggle ? '▼' : '▲';\n    }\n\n    // events\n\n    private _btnMnuClick = (e: MouseEvent) => {\n        if (!e.button) {\n            this._toggleMenu();\n        }\n    }\n\n    private _mnuChBLClick = (e: MouseEvent) => {\n        this._mnuChBClick(e, 0);\n    }\n\n    private _mnuChBRClick = (e: MouseEvent) => {\n        this._mnuChBClick(e, 1);\n    }\n\n    private _mnuChBClick = (e: MouseEvent, channelIndex: number) => {\n        if (!e.button) {\n            if (!this._isSameFilterLR || this._currentChannelIndex !== channelIndex) {\n                if (this._isSameFilterLR) {\n                    this._currentChannelIndex = channelIndex;\n                    this._filter.channelIndex = -1;\n                    this._filter.updateFilter(true);\n\n                    if (this._isActualChannelCurveNeeded) {\n                        this._filter.updateActualChannelCurve(channelIndex);\n                    }\n\n                    this._drawCurve();\n                }\n                else {\n                    this._isSameFilterLR = true;\n                    this._filter.copyFilter(channelIndex, 1 - channelIndex);\n                    if (this._currentChannelIndex !== channelIndex) {\n                        this._currentChannelIndex = channelIndex;\n\n                        if (this._isActualChannelCurveNeeded) {\n                            this._filter.updateActualChannelCurve(channelIndex);\n                        }\n\n                        this._drawCurve();\n                    }\n                }\n\n                this._checkMenu(this._mnuChBL, channelIndex === 0);\n                this._checkMenu(this._mnuChBR, channelIndex === 1);\n            }\n        }\n    }\n\n    private _mnuChLClick = (e: MouseEvent) => {\n        this._mnuChLRClick(e, 0);\n    }\n\n    private _mnuChRClick = (e: MouseEvent) => {\n        this._mnuChLRClick(e, 1);\n    }\n\n    private _mnuChLRClick = (e: MouseEvent, channelIndex: number) => {\n        if (!e.button) {\n            if (this._isSameFilterLR || this._currentChannelIndex !== channelIndex) {\n                if (this._isSameFilterLR) {\n                    this._isSameFilterLR = false;\n                    this._filter.channelIndex = 1 - this._currentChannelIndex;\n                    this._filter.updateFilter(false);\n                }\n\n                if (this._currentChannelIndex !== channelIndex) {\n                    this._currentChannelIndex = channelIndex;\n\n                    if (this._isActualChannelCurveNeeded) {\n                        this._filter.updateActualChannelCurve(channelIndex);\n                    }\n\n                    this._drawCurve();\n                }\n\n                this._checkMenu(this._mnuChL, channelIndex === 0);\n                this._checkMenu(this._mnuChR, channelIndex === 1);\n            }\n        }\n    }\n\n    private _mnuShowZonesClick = (e: MouseEvent) => {\n        if (!e.button) {\n            this._showZones = !this._showZones;\n            this._checkMenu(this._mnuShowZones, this._showZones);\n            this._drawCurve();\n        }\n    }\n\n    private _mnuEditZonesClick = (e: MouseEvent) => {\n        if (!e.button) {\n            this._editZones = !this._editZones;\n            this._canvas.classList[this._editZones ? 'add' : 'remove'](`${this._options.classNamespace}CNVZON`);\n            this._checkMenu(this._mnuEditZones, this._editZones);\n        }\n    }\n\n    private _mnuNormalizeCurvesClick = (e: MouseEvent) => {\n        if (!e.button) {\n            this._filter.isNormalized = !this._filter.isNormalized;\n            this._checkMenu(this._mnuNormalizeCurves, this._filter.isNormalized);\n\n            if (this._isActualChannelCurveNeeded) {\n                this._filter.updateActualChannelCurve(this._currentChannelIndex);\n                this._drawCurve();\n            }\n        }\n    }\n\n    private _mnuShowActualClick = (e: MouseEvent) => {\n        if (!e.button) {\n            this._isActualChannelCurveNeeded = !this._isActualChannelCurveNeeded;\n            this._checkMenu(this._mnuShowActual, this._isActualChannelCurveNeeded);\n\n            if (this._isActualChannelCurveNeeded) {\n                this._filter.updateActualChannelCurve(this._currentChannelIndex);\n            }\n\n            this._drawCurve();\n        }\n    }\n\n    private _btnMnuKeyDown = (e: KeyboardEvent) => {\n        if (keyPressed(e, 'ArrowUp', 'ArrowDown')) {\n            cancelEvent(e);\n            this._toggleMenu(keyPressed(e, 'ArrowUp'));\n\n            window.setTimeout(() => {\n                const items = this._mnu.querySelectorAll(`.${this._options.classNamespace!}MNUIT`);\n                (items[items.length - 1] as HTMLButtonElement).focus();\n            });\n        }\n    }\n\n    private _mnuKeyDown = (e: KeyboardEvent) => {\n\n        const moveFocus = (elem: Node, down: boolean) => {\n            const siblingProp = down ? 'nextSibling' : 'previousSibling';\n            let currentElem: Node | null = elem;\n\n            do {\n                currentElem = currentElem[siblingProp];\n\n                if (currentElem instanceof HTMLButtonElement &&\n                    currentElem.classList.contains(`${this._options.classNamespace!}MNUIT`)) {\n                    currentElem.focus();\n                    return true;\n                }\n            } while (currentElem);\n\n            return false;\n        };\n\n        if (keyPressed(e, 'ArrowUp', 'ArrowDown')) {\n            cancelEvent(e);\n            const down = keyPressed(e, 'ArrowDown');\n            if (!moveFocus(e.target as Node, down) && down) {\n                this._btnMnu.focus();\n            }\n        }\n    }\n\n    private _canvasMouseDown = (e: MouseEvent) => {\n        if (!e.button) {\n            if (!this._drawingMode) {\n                const { x, y } = elemCoords(this._canvas, e);\n\n                const normX = Math.floor(x / this._widthRatio());\n                const normY = y / this._heightRatio();\n\n                if (normX >= 0 && normX < this._filter.options.visibleBinCount!) {\n                    this._drawingMode = 1;\n                    if (this._editZones) {\n                        this._filter.changeZoneY(this._currentChannelIndex, normX, normY);\n                    }\n                    else {\n                        this._filter.channelCurves[this._currentChannelIndex][normX] = this._filter.clampY(normY);\n                        this._lastDrawX = normX;\n                        this._lastDrawY = normY;\n                    }\n\n                    this._drawCurve();\n\n                    if (this._canvas.setPointerCapture) {\n                        this._canvas.setPointerCapture((e as PointerEvent).pointerId);\n                    }\n                    else if (!(e as any).clonedFromTouch) {\n                        detachPointer(this._canvas, 'move', this._canvasMouseMove);\n                        detachPointer(this._canvas, 'up', this._canvasMouseUp);\n                        attachPointer(document, 'move', this._documentMouseMove, true);\n                        attachPointer(document, 'up', this._documentMouseUp, true);\n                    }\n                }\n            }\n\n            return cancelEvent(e);\n        }\n\n        return true;\n    }\n\n    private _canvasMouseUp = (e: MouseEvent) => {\n        if (this._drawingMode) {\n            this._drawingMode = 0;\n            this._filter.channelIndex = this._currentChannelIndex;\n            this._filter.updateFilter(false);\n\n            if (this._isActualChannelCurveNeeded) {\n                this._filter.updateActualChannelCurve(this._currentChannelIndex);\n            }\n\n            this._drawCurve();\n\n            if (this._canvas.releasePointerCapture) {\n                this._canvas.releasePointerCapture((e as PointerEvent).pointerId);\n            }\n            else if (!(e as any).clonedFromTouch) {\n                detachPointer(document, 'move', this._documentMouseMove, true);\n                detachPointer(document, 'up', this._documentMouseUp, true);\n                attachPointer(this._canvas, 'move', this._canvasMouseMove);\n                attachPointer(this._canvas, 'up', this._canvasMouseUp);\n            }\n        }\n    }\n\n    private _canvasMouseMove = (e: MouseEvent) => {\n        let curve = this._filter.channelCurves[this._currentChannelIndex];\n        const { x, y } = elemCoords(this._canvas, e);\n\n        if (this._drawingMode || (x >= 0 && x < this._canvas.width && y >= 0 && y < this._canvas.height)) {\n            let normX = Math.floor(x / this._widthRatio());\n            let normY = y / this._heightRatio();\n\n            if (normX < 0) {\n                normX = 0;\n            }\n            else if (normX >= this._filter.options.visibleBinCount!) {\n                normX = this._filter.options.visibleBinCount! - 1;\n            }\n\n            if (this._drawingMode) {\n                if (this._editZones) {\n                    this._filter.changeZoneY(this._currentChannelIndex, normX, normY);\n                }\n                else {\n                    if (Math.abs(normX - this._lastDrawX) > 1) {\n                        const delta = (normY - this._lastDrawY) / Math.abs(normX - this._lastDrawX);\n                        const inc = ((normX < this._lastDrawX) ? -1 : 1);\n                        normY = this._lastDrawY + delta;\n                        let count = Math.abs(normX - this._lastDrawX) - 1;\n\n                        for (normX = this._lastDrawX + inc; count > 0; normX += inc, count--) {\n                            curve[normX] = this._filter.clampY(normY);\n                            normY += delta;\n                        }\n                    }\n\n                    curve[normX] = this._filter.clampY(normY);\n                    this._lastDrawX = normX;\n                    this._lastDrawY = normY;\n                }\n                this._drawCurve();\n\n                if (this._options.updateFilterOnDrag) {\n                    // tslint:disable-next-line:no-magic-numbers\n                    throttledFunction(this._wrappedUpdateFilter, 150);\n                }\n            }\n            else if (this._isActualChannelCurveNeeded) {\n                curve = this._filter.actualChannelCurve;\n            }\n\n            this._setStatusBar(normX, normY, curve[normX]);\n\n            if (this._drawingMode) {\n                return cancelEvent(e);\n            }\n        }\n\n        return true;\n    }\n\n    private _windowResize = () => {\n        this._fixCanvasSize();\n    }\n\n    private _documentMouseMove = (e: MouseEvent) =>\n        this._canvasMouseMove(e);\n\n    private _documentMouseUp = (e: MouseEvent) => {\n        this._canvasMouseUp(e);\n    }\n\n    // virtual properties\n\n    get options(): ICanvasEqualizerOptions {\n        return deepAssign({}, defaultOptions, this._options);\n    }\n\n    get filterLength(): number {\n        return this._filter.filterLength;\n    }\n\n    set filterLength(newFilterLength: number) {\n        if (this._filter.filterLength !== newFilterLength) {\n            this._filter.filterLength = newFilterLength;\n\n            if (this._isActualChannelCurveNeeded) {\n                this._filter.updateActualChannelCurve(this._currentChannelIndex);\n            }\n\n            this._drawCurve();\n        }\n    }\n\n    get sampleRate(): number {\n        return this._filter.sampleRate;\n    }\n\n    set sampleRate(newSampleRate: number) {\n        if (this._filter.sampleRate !== newSampleRate) {\n            this._filter.sampleRate = newSampleRate;\n\n            if (this._isActualChannelCurveNeeded) {\n                this._filter.updateActualChannelCurve(this._currentChannelIndex);\n            }\n\n            this._drawCurve();\n        }\n    }\n\n    get audioContext(): AudioContext {\n        return this._filter.audioContext;\n    }\n\n    set audioContext(newAudioContext: AudioContext) {\n        if (this._filter.audioContext !== newAudioContext) {\n            this._filter.audioContext = newAudioContext;\n        }\n    }\n\n    get language(): string {\n        return this._l10n.language;\n    }\n\n    set language(language: string) {\n        this._l10n.language = language;\n    }\n\n    get visibleFrequencies(): Float32Array {\n        return this._filter.visibleFrequencies;\n    }\n\n    get convolver(): ConvolverNode {\n        return this._filter.convolver;\n    }\n}\n"],"names":["hasOwnProperty","Object","prototype","propIsEnumerable","propertyIsEnumerable","toObject","val","TypeError","assignKey","to","from","key","call","undefined","x","type","assign","getOwnPropertySymbols","symbols","i","length","attachPointer","detachPointer","target","s","arguments","wrap","func","wrapper","tag","elem","wrapperTag","unwrap","push","ret","filter","entry","window","CustomEvent","e","MouseEvent","eventType","params","bubbles","cancelable","mouseEvent","document","createEvent","initMouseEvent","screenX","screenY","clientX","clientY","ctrlKey","altKey","shiftKey","metaKey","Event","PointerEvent","observable","eventName","targetFunction","capturePhase","addEventListener","removeEventListener","mappings","down","move","up","touch","changedTouches","pseudoMouse","clonedFromTouch","result","defaultPrevented","cancelEvent","forEach","mapping","runningFuncs","keyFix","Backspace","Escape","End","Home","ArrowLeft","ArrowUp","ArrowRight","ArrowDown","Delete","keyPressed","chr","keys","indexOf","Array","isArray","keyCode","preventDefault","stopPropagation","throttledFunction","timeout","splice","setTimeout","requestAnimationFrame","elemCoords","rect","getBoundingClientRect","left","y","top","FFTComplex","data","n","isign","mmax","m","istep","wr","wpr","wpi","wi","theta","tempr","tempi","halfmmax","dj1","dj","nn","j","Math","PI","sin","FFTReal","i1","i2","i3","i4","d1","d2","d3","d4","c2","h1r","h1i","h2r","h2i","n4","defaultOptions","validYRangeHeight","visibleBinCount","Equalizer","filterLength","audioContext","options","_validateFilterLength","_options","deepAssign","_filterLength","_sampleRate","sampleRate","_isNormalized","_binCount","_audioContext","_filterKernel","createBuffer","this","_tmp","Float32Array","_channelCurves","Int16Array","_actualChannelCurve","_channelIndex","_zeroChannelValueY","_maximumChannelValue","_minimumChannelValue","_minusInfiniteChannelValue","_maximumChannelValueY","_minimumChannelValueY","_visibleFrequencies","_equivalentZones","Uint16Array","eqz","ratio","freqSteps","firstFreqs","f","map","num","round","_equivalentZonesFrequencyCount","reset","_convolver","createConvolver","normalize","buffer","updateFilter","updateActualChannelCurve","maxY","minY","Infinity","_lerp","exp","LN10","magnitude","zcy","log","visibleBinIndex","z","vf","vbc","ez","ezc","channelIndex","visibleBinToZoneIndex","ii","cy","clampY","curve","convolverCallback","oldConvolver","sourceChannel","destinationChannel","src","getChannelData","dst","_updateBuffer","updateBothChannels","max","isSameFilterLR","valueCount","bw","filterLength2","M_HALF_PI_FFTLEN2","invMaxMag","repeat","Number","mag","yToMagnitude","freq","avg","avgCount","k","cos","_applyWindowAndComputeActualMagnitudes","copyFilter","oldChannelIndex","tmp","magnitudeToY","M","PI2_M","maxMag","rval","ival","sqrt","newFilterLength","newSampleRate","isNormalized","newAudioContext","disconnect","slice","newChannelIndex","Error","x0","y0","x1","y1","L10n","language","_language","loadLocale","defaultLocale","locale","_locales","locales","str","get","args","arg","replace","RegExp","toLocaleString","classNamespace","filterOptions","updateFilterOnDrag","frequency","compact","unit","_l10n","format","_filter","button","_toggleMenu","_mnuChBClick","_isSameFilterLR","_currentChannelIndex","_isActualChannelCurveNeeded","_drawCurve","_checkMenu","_mnuChBL","_mnuChBR","_mnuChLRClick","_mnuChL","_mnuChR","_showZones","_mnuShowZones","_editZones","_canvas","classList","_mnuEditZones","_mnuNormalizeCurves","_mnuShowActual","items","_mnu","querySelectorAll","focus","moveFocus","siblingProp","currentElem","HTMLButtonElement","contains","_btnMnu","_drawingMode","normX","floor","_widthRatio","normY","_heightRatio","changeZoneY","channelCurves","_lastDrawX","_lastDrawY","setPointerCapture","pointerId","_canvasMouseMove","_canvasMouseUp","_documentMouseMove","_documentMouseUp","releasePointerCapture","width","height","abs","delta","inc","count","_wrappedUpdateFilter","actualChannelCurve","_setStatusBar","_fixCanvasSize","placeholder","_ctx","createLabel","name","content","lbl","createElement","className","clsNS","innerHTML","createMenuSep","setAttribute","createMenuLabel","text","l","textContent","createMenuItem","checkable","checked","clickHandler","dataset","appendChild","createTextNode","blur","_element","test","navigator","userAgent","MSStream","add","getComputedStyle","direction","_isRTL","_stb","_canvasMouseDown","running","addThrottledEvent","_windowResize","ctx","getContext","_lblCursor","_lblCurve","_lblFrequency","zeroChannelValueY","_btnMnuClick","_btnMnuKeyDown","_mnuKeyDown","_mnuChBLClick","_mnuChBRClick","_mnuChLClick","_mnuChRClick","_mnuShowZonesClick","_mnuEditZonesClick","_mnuNormalizeCurvesClick","_mnuShowActualClick","_rangeImage","clearTimeout","_barHideTimeout","dB","minimumFractionDigits","maximumFractionDigits","frequencyAndEquivalent","_formatFrequencyUnit","mnu","chk","inner","toggle","style","visibility","toString","firstChild","pixelRound","middleOffset","canvas","pixelRatio","devicePixelRatio","widthRatio","heightRatio","widthMinus1","fillStyle","fillRect","lineWidth","strokeStyle","beginPath","moveTo","lineTo","stroke","font","textAlign","fillText","equivalentZonesFrequencyCount","clientHeight","display","setTransform","createLinearGradient","addColorStop","label","span","querySelector","curveY","_setLabelParam","_formatDB","yToDB","_formatFrequency","visibleBinToFrequencyGroup","visibleFrequencies","convolver"],"mappings":"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"}